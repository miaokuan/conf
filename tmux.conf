#设置PREFIX为Ctrl-a
set -g prefix C-x
#解除Ctrl-b与PREFIX的对应关系
unbind C-b

# reload config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# color
set -g default-terminal "screen-256color"

# status bar
set -g status-utf8 on
set -g status-fg white
set -g status-bg black

# pane border
set-option -g pane-border-fg green
set-option -g pane-border-bg black
set-option -g pane-active-border-fg white
set-option -g pane-active-border-bg yellow

# pane number display
set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour orange #orange

#设置pan前景色
#set -g pane-border-fg green
#设置pane背景色
#set -g pane-border-bg black
#设置活跃pane前景色
#set -g pane-active-border-fg white
#设置活跃pane背景色
#set -g pane-active-border-bg yellow

# message text
set -g message-attr bright
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# default window title colors
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

#设置status bar格式
set -g status-left-length 20
set -g status-left "#[fg=green]#S@#H:)"
set -g status-right "#[fg=green]%m-%d %a %l:%M "
set -g status-interval 60
set -g status-justify centre

#开启window事件提示
setw -g monitor-activity on
set -g visual-activity on

set -g history-limit 65535

# Start numbering at 1
set -g base-index 1
set -g pane-base-index 1

# set window split
bind-key v split-window -h
bind-key b split-window

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# auto window rename
set-window-option -g automatic-rename

# clock
set-window-option -g clock-mode-colour green #green

# Vi copypaste mode
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Enable mouse support (works in iTerm)
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on


# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# rm mouse mode fail
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\) -o #{$TMUX_VERSION_MAJOR} -gt 2' 'set -g mouse off'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'

# fix pane_current_path on new window and splits
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'



